{"version":3,"sources":["context/TransactionReducer.js","context/TransactionContext.js","components/Title.js","components/Transaction.js","components/TransactionHistory.js","components/Balance.js","components/ExpenseIncome.js","components/TransactionForm.js","components/App.js","index.js"],"names":["state","action","type","transactions","payload","filter","transaction","_id","initialState","TransactionContext","createContext","TransactionProvider","children","useReducer","TransactionReducer","dispatch","useEffect","fetch","then","res","json","data","Provider","value","addTransaction","method","headers","body","JSON","stringify","response","success","catch","error","console","deleteTransaction","id","Title","titleText","class","Transaction","useContext","className","amount","description","onClick","TransactionHistory","map","key","Balance","balance","reduce","toFixed","ExpenseIncome","expenses","incomes","style","maxWidth","TransactionForm","useState","formInput","setformInput","inputChanged","e","target","name","prevState","onSubmit","preventDefault","desc","onChange","amonut","App","ReactDOM","render","document","getElementById"],"mappings":"iKAAe,WAACA,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,mBACD,sBAEWF,EAFX,CAGQG,aAAaF,EAAOG,UAGhC,IAAK,kBACD,sBAEWJ,EAFX,CAGQG,aAAa,CAACF,EAAOG,SAAT,mBAAqBJ,EAAMG,iBAGnD,IAAK,qBACD,sBAEWH,EAFX,CAGQG,aAAaH,EAAMG,aAAaE,QAAO,SAAAC,GAAW,OAAIA,EAAYC,MAAMN,EAAOG,aAG3F,QACI,OAAOJ,ICrBbQ,EAAe,CACjBL,aAAa,IAGJM,EAAqBC,wBAAcF,GAEnCG,EAAsB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACrBC,qBAAWC,EAAoBN,GADV,mBACxCR,EADwC,KACjCe,EADiC,KAmD/C,OAtCAC,qBAAU,WATNC,MAAM,wBACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAf,GAAY,OAAIY,EAAS,CAC3Bb,KAAK,mBACLE,QAAQD,EAAakB,YAKM,IAuC/B,kBAACZ,EAAmBa,SAApB,CAA6BC,MAAO,CAChCpB,aAAaH,EAAMG,aACnBqB,eAtCR,SAAwBlB,GACxBW,MAAM,sBAAuB,CACzBQ,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUvB,KAEpBY,MAAK,SAAAY,GAAQ,OAAIA,EAASV,UAC1BF,MAAK,SAAAG,GACCA,EAAKU,SACJhB,EAAS,CACLb,KAAK,kBACLE,QAAQiB,EAAKA,UAIxBW,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,OAsBpCE,kBAnBR,SAA2BC,GACvBnB,MAAM,uBAAD,OAAwBmB,GAAK,CAC9BX,OAAO,WAEVP,MAAK,SAAAY,GAAQ,OAAIA,EAASV,UAC1BF,MAAK,SAAAG,GACCA,EAAKU,SACJhB,EAAS,CACLb,KAAK,qBACLE,QAAQgC,UAWfxB,ICzDEyB,EAND,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACZ,OACI,4BAAQpC,KAAK,SAASqC,MAAM,sEAAsED,ICc3FE,EAfK,SAAC,GAAmB,IAAlBlC,EAAiB,EAAjBA,YAEX6B,EAAqBM,qBAAWhC,GAAhC0B,kBAEP,OACG,wBAAIC,GAAI9B,EAAYC,IAAKmC,UAAWpC,EAAYqC,OAAO,EAAE,cAAc,gBACnE,4BAAKrC,EAAYsC,aACjB,wBAAIF,UAAU,eAAepC,EAAYqC,QACzC,wBAAID,UAAU,yCACbG,QAAW,kBAAMV,EAAkB7B,EAAYC,OADhD,OCgBIuC,EAvBY,WAAO,IAEvB3C,EAAgBsC,qBAAWhC,GAA3BN,aAEP,OACI,2BAAOuC,UAAU,qBACjB,+BACI,4BACI,2CACA,wBAAIA,UAAU,eAAd,UACA,+BAGR,+BACKvC,EAAa4C,KAAI,SAAAzC,GAAW,OAAI,kBAAC,EAAD,CAC7B0C,IAAK1C,EAAYC,IACjBD,YAAaA,UCPd2C,EAVC,WAAO,IAIjBC,EAFiBT,qBAAWhC,GAA3BN,aAEsB4C,KAAI,SAAAzC,GAAW,OAAIA,EAAYqC,UAAQQ,QAAO,SAACD,EAASP,GAAV,OAAsBO,EAASP,IAAS,GAAGS,QAAQ,GAC1H,OACG,wBAAIV,UAAU,QAAd,oBAAuCQ,EAAvC,QCuBQG,EA7BO,WAAO,IAElBlD,EAAgBsC,qBAAWhC,GAA3BN,aAEDmD,EAAWnD,EAAa4C,KAAI,SAAAzC,GAAW,OAAIA,EAAYqC,UAAQtC,QAAO,SAAAsC,GAAM,OAAIA,EAAO,KAAGQ,QAAO,SAACG,EAASX,GAAV,OAAsBW,EAAUX,IAAS,GAAGS,QAAQ,GACrJG,EAAUpD,EAAa4C,KAAI,SAAAzC,GAAW,OAAIA,EAAYqC,UAAQtC,QAAO,SAAAsC,GAAM,OAAIA,EAAO,KAAGQ,QAAO,SAACG,EAASX,GAAV,OAAsBW,EAAUX,IAAS,GAAGS,QAAQ,GAE1J,OACI,yBAAKV,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,kCAAkCc,MAAO,CAACC,SAAU,UAC/D,yBAAKf,UAAU,aACX,wBAAIA,UAAU,cAAd,WACA,uBAAGA,UAAU,aAAaY,MAItC,yBAAKZ,UAAU,SACX,yBAAKA,UAAU,iCAAiCc,MAAO,CAACC,SAAU,UAC9D,yBAAKf,UAAU,aACX,wBAAIA,UAAU,cAAd,YACA,uBAAGA,UAAU,aAAaa,Q,OCqBnCG,EA1CS,WAAO,IAEpBlC,EAAkBiB,qBAAWhC,GAA7Be,eAFmB,EAIQmC,mBAAS,CACvCf,YAAY,GACZD,OAAO,KANe,mBAInBiB,EAJmB,KAIRC,EAJQ,KAWpBC,EAAe,SAACC,GAAO,IAAD,EACHA,EAAEC,OAAhBC,EADiB,EACjBA,KAAK1C,EADY,EACZA,MACZsC,GAAa,SAAAK,GAAS,sBACfA,EADe,eAEjBD,EAAM1C,QAYf,OACI,0BAAM4C,SATY,SAACJ,GACnBA,EAAEK,iBAEF5C,EADqBoC,KAQjB,yBAAKlB,UAAU,cACX,2BAAOA,UAAU,oCAAjB,2BACA,2BAAOA,UAAU,+BAA+BxC,KAAK,OAAO+D,KAAK,cAAc1C,MAAOqC,EAAUS,KAAMC,SAAUR,KAEpH,yBAAKpB,UAAU,cACX,2BAAOA,UAAU,oCAAjB,sBACA,2BAAOA,UAAU,+BAA+BxC,KAAK,SAAS+D,KAAK,SAAS1C,MAAOqC,EAAUW,OAAQD,SAAUR,KAEnH,4BAAQ5D,KAAK,SAASwC,UAAU,0CAAhC,SCnBG8B,MAZf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOlC,UAAU,mBACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCZNmC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.c3f72776.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return(\r\n                {\r\n                    ...state,\r\n                    transactions:action.payload\r\n                }\r\n            )\r\n        case 'ADD_TRANSACTION':\r\n            return(\r\n                {\r\n                    ...state,\r\n                    transactions:[action.payload, ...state.transactions]\r\n                }\r\n            )\r\n        case 'DELETE_TRANSACTION':\r\n            return(\r\n                {\r\n                    ...state,\r\n                    transactions:state.transactions.filter(transaction => transaction._id!==action.payload)\r\n                }\r\n            )\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport TransactionReducer from './TransactionReducer';\r\n\r\nconst initialState = {\r\n    transactions:[]\r\n}\r\n\r\nexport const TransactionContext = createContext(initialState);\r\n\r\nexport const TransactionProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(TransactionReducer, initialState);\r\n\r\n    function getTransactions(){\r\n        fetch('/api/v1/transactions')\r\n        .then(res => res.json())\r\n        .then(transactions => dispatch({\r\n            type:'GET_TRANSACTIONS',\r\n            payload:transactions.data\r\n        }));\r\n    }\r\n\r\n    // Getting transactions from database at TransactionProvider render\r\n    useEffect(() => getTransactions(), [])\r\n\r\n    // Working with transactions\r\n    function addTransaction(transaction){\r\n    fetch('api/v1/transactions', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(transaction),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.success){\r\n                dispatch({\r\n                    type:'ADD_TRANSACTION',\r\n                    payload:data.data\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    function deleteTransaction(id){\r\n        fetch(`api/v1/transactions/${id}`,{\r\n            method:'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.success){\r\n                dispatch({\r\n                    type:'DELETE_TRANSACTION',\r\n                    payload:id\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <TransactionContext.Provider value={{\r\n            transactions:state.transactions,\r\n            addTransaction,\r\n            deleteTransaction}}>\r\n            {children}\r\n        </TransactionContext.Provider>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nconst Title = ({titleText}) => {\r\n    return (\r\n        <button type=\"button\" class=\"btn btn-outline-warning text-center btn-lg btn-block mb-5 disabled\">{titleText}</button>\r\n    )\r\n}\r\n\r\nexport default Title;\r\n","import React, { useContext} from 'react'\r\nimport {TransactionContext} from '../context/TransactionContext';\r\n\r\nconst Transaction = ({transaction}) => {\r\n\r\n    const {deleteTransaction} = useContext(TransactionContext);\r\n\r\n    return (\r\n       <tr id={transaction._id} className={transaction.amount<0?\"text-danger\":\"text-success\"}>\r\n           <td>{transaction.description}</td>\r\n           <td className=\"text-center\">{transaction.amount}</td>\r\n           <td className=\"btn-sm btn-outline-warning text-center\"\r\n            onClick = {() => deleteTransaction(transaction._id)}\r\n            >X</td>\r\n       </tr>\r\n    )\r\n}\r\n\r\nexport default Transaction;","import React, {useContext} from 'react'\r\nimport {TransactionContext} from '../context/TransactionContext';\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionHistory = () => {\r\n\r\n    const {transactions} = useContext(TransactionContext);\r\n\r\n    return (\r\n        <table className=\"table table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th>Description</th>\r\n                <th className=\"text-center\">Amount</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {transactions.map(transaction => <Transaction\r\n                key={transaction._id}\r\n                transaction={transaction}\r\n            />)}\r\n        </tbody> \r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TransactionHistory;","import React, {useContext} from 'react'\r\nimport {TransactionContext} from '../context/TransactionContext';\r\n\r\nconst Balance = () => {\r\n\r\nconst {transactions} = useContext(TransactionContext);\r\n\r\nconst balance = transactions.map(transaction => transaction.amount).reduce((balance, amount) => (balance+=amount), 0).toFixed(2);\r\n    return (\r\n       <h4 className=\"mb-5\">Current balance: {balance} kn</h4>\r\n    )\r\n}\r\n\r\nexport default Balance;","import React, {useContext} from 'react'\r\nimport { TransactionContext } from '../context/TransactionContext';\r\n\r\nconst ExpenseIncome = () => {\r\n\r\n    const {transactions} = useContext(TransactionContext);\r\n\r\n    const expenses = transactions.map(transaction => transaction.amount).filter(amount => amount>0).reduce((expenses,amount) => (expenses+=amount), 0).toFixed(2);\r\n    const incomes = transactions.map(transaction => transaction.amount).filter(amount => amount<0).reduce((expenses,amount) => (expenses+=amount), 0).toFixed(2);\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <div className=\"card text-white bg-success mb-3\" style={{maxWidth: 20+\"rem\"}}>\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Incomes</h4>\r\n                        <p className=\"card-text\">{expenses}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <div className=\"card text-white bg-danger mb-3\" style={{maxWidth: 20+\"rem\"}}>\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Expenses</h4>\r\n                        <p className=\"card-text\">{incomes}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseIncome;\r\n","import React, {useState, useContext} from 'react'\r\nimport {TransactionContext} from '../context/TransactionContext';\r\n\r\nconst TransactionForm = () => {\r\n\r\n    const {addTransaction} = useContext(TransactionContext);\r\n\r\n    const [formInput, setformInput] = useState({\r\n        description:\"\",\r\n        amount:\"\"\r\n    });\r\n\r\n    \r\n\r\n    const inputChanged = (e) => {\r\n        const {name,value} = e.target;\r\n        setformInput(prevState => ({\r\n            ...prevState,\r\n            [name]:value\r\n        }));\r\n    }\r\n\r\n    const formSubmitted = (e) => {\r\n        e.preventDefault();\r\n        let newTransaction = formInput;\r\n        addTransaction(newTransaction);\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formSubmitted}>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-form-label col-form-label-sm\">Transaction description</label>\r\n                <input className=\"form-control form-control-sm\" type=\"text\" name=\"description\" value={formInput.desc} onChange={inputChanged}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-form-label col-form-label-sm\">Transaction amount</label>\r\n                <input className=\"form-control form-control-sm\" type=\"number\" name=\"amount\" value={formInput.amonut} onChange={inputChanged}/>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-outline-warning btn-block mb-5\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TransactionForm;\r\n","import React from 'react';\nimport {TransactionProvider} from '../context/TransactionContext';\nimport Title from './Title';\nimport TransactionHistory from './TransactionHistory';\nimport Balance from './Balance';\nimport ExpenseIncome from './ExpenseIncome';\nimport TransactionForm from './TransactionForm';\n\n\nfunction App() {\n  return (\n    <TransactionProvider>\n      <Title titleText='Budget tracker'/>\n      <Balance/>\n      <ExpenseIncome/>\n      <TransactionHistory/>\n      <TransactionForm/>\n    </TransactionProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}